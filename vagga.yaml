containers:
  webgpio:
    setup:
    - !Ubuntu xenial
    - !AptTrust keys: [F06FC659]
    - !UbuntuPPA jonathonf/python-3.6
    - !Install [libpq-dev, python3.6, libc6-dev, libpython3.6-dev, libpython3.6]
    - !PipConfig {dependencies: true, python-exe: python3.6}
    - !Py3Requirements "requirements/base.txt"
    - !Py3Install [setuptools]
  
  redis:
    setup:
    - !Alpine v3.5
    - !Install [redis]
  
  postgres:
    setup:
    - !Ubuntu xenial
    - !Install [postgresql]
    - !EnsureDir /data
    environ:
      PG_PORT: 5432
      PG_DB: webgpio
      PG_USER: gpio
      PG_PASSWORD: gpio
      PGDATA: /data
      PG_BIN: /usr/lib/postgresql/9.5/bin
    volumes:
      /data: !Tmpfs
        size: 100M
        mode: 0o700

commands:
  run: !Supervise
    description: Run app
    children:
      _app: !Command
        container: webgpio
        run: |
            touch /work/.dbcreation # Create lock file
            while [ -f /work/.dbcreation ]; do sleep 0.2; done # Acquire lock
            alembic upgrade head
            gunicorn -b 0.0.0.0:8080 -k aiohttp.worker.GunicornWebWorker -w 1 -t 60 --reload main:server
      _postgres: !Command
        container: postgres
        run: |
            chown postgres:postgres $PGDATA;
            su postgres -c "$PG_BIN/pg_ctl initdb";
            su postgres -c "echo 'host all all all trust' >> $PGDATA/pg_hba.conf"
            su postgres -c "$PG_BIN/pg_ctl -w -o '-F --port=$PG_PORT -k /tmp' start";
            su postgres -c "$PG_BIN/psql -h 127.0.0.1 -p $PG_PORT -c \"CREATE USER $PG_USER WITH PASSWORD '$PG_PASSWORD';\""
            su postgres -c "$PG_BIN/createdb -h 127.0.0.1 -p $PG_PORT $PG_DB -O $PG_USER";
            rm /work/.dbcreation # Release lock
            sleep infinity
      _redis: !Command
        container: redis
        run: "redis-server"

